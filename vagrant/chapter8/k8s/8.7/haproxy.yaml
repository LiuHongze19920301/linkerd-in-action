apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
data:
  haproxy.cfg: |-
    global
      log         127.0.0.1 local2
      maxconn     4000
    
    defaults
      mode http
      log global
      retries 3
      option httplog
      option dontlognull
      option httpclose
      option abortonclose
      option forwardfor except 127.0.0.0/8
      option redispatch
      timeout connect 5000ms
      timeout client 50000ms
      timeout server 50000ms
      timeout check 2000ms
      timeout http-keep-alive 10s
      timeout http-request 10s

    listen stats
      bind *:7890
      mode http
      maxconn 10
      stats refresh 10s
      stats uri /stats

    frontend egress
      bind *:8888
      mode  tcp
      default_backend   egress-linkerd

    backend egress-linkerd
      balance     roundrobin
      server  egress01 127.0.0.1:4140 check
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  labels:
    app: haproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      - key: "node-role.kubernetes.io/master"
        effect: "NoSchedule"
      nodeName: kube-master
      containers:
      - name: haproxy
        image: haproxy:1.7-alpine
        args:
        - "haproxy"
        - "-f"
        - "/etc/haproxy/haproxy.cfg"
        ports:
        - name: http
          containerPort: 8888
        - name: stats
          containerPort: 7890
        volumeMounts:
        - name: haproxy-config
          mountPath: /etc/haproxy
      volumes:
      - name: haproxy-config
        configMap:
          name: haproxy-config